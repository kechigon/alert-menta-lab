name: "Alert-Menta: Reacts to specific labels"
run-name: ${{ GITHUB_REPOSITORY }} LLM responds to issues against the repository.ðŸš€

on:
  issues:
    types: [labeled] # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issues
  issue_comment:
    types: [created]

jobs:
  Alert-Menta:
    if: (contains(github.event.issue.labels.*.name, '/describe') && startsWith(github.event.comment.body, '/describe')) ||
      (contains(github.event.issue.labels.*.name, '/improve') && startsWith(github.event.comment.body, '/improve')) # https://docs.github.com/ja/webhooks/webhook-events-and-payloads#issues
    runs-on: ubuntu-22.04 # https://docs.github.com/ja/actions/using-jobs/choosing-the-runner-for-a-job
    permissions:
      issues: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download and Install alert-menta
        run: |
          curl -sLJO -H 'Accept: application/octet-stream' \
          "https://${{ secrets.GH_TOKEN }}@api.github.com/repos/3-shake/alert-menta/releases/assets/$( \
          curl -sL "https://${{ secrets.GH_TOKEN }}@api.github.com/repos/3-shake/alert-menta/releases/tags/v0.0.1" \
          | jq '.assets[] | select(.name | contains("Linux_x86")) | .id')"
          tar -zxvf alert-menta_Linux_x86_64.tar.gz
      
      - name: Set Command describe
        id: describe
        if: contains(github.event.issue.labels.*.name, '/describe')
        run: |
          echo "COMMAND=describe" >> $GITHUB_ENV
      - name: Set Command improve
        id: improve
        if: steps.describe.conclusion == 'skipped' || contains(github.event.issue.labels.*.name, '/improve')
        run: |
          echo "COMMAND=improve" >> $GITHUB_ENV
      - run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_ENV

      - name: Get user defined config file
        id: user_config
        if: hashFiles('.alert-menta.user.yaml') != ''
        run: |
          echo "CONFIG_FILE=.alert-menta.user.yaml" >> $GITHUB_ENV
      - name: Get default config file
        if: steps.user_config.conclusion == 'skipped' && hashFiles('./internal/config/config.yaml') != ''
        run: |
          echo "CONFIG_FILE=./internal/config/config.yaml" >> $GITHUB_ENV

      - name: Add Comment
        run: |
          ./alert-menta -owner ${{ github.repository_owner }} -issue ${{ github.event.issue.number }} -repo ${{ env.REPOSITORY_NAME }} -github-token ${{ secrets.GITHUB_TOKEN }} -api-key ${{ secrets.OPENAI_API_KEY }} -command $COMMAND -config $CONFIG_FILE
